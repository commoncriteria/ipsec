<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>

<!--
<?xml-model href="CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>    
-->

<!-- 
-->  


<Package name="IPsec"
  xmlns="https://niap-ccevs.org/cc/v1"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section"
  xmlns:h="http://www.w3.org/1999/xhtml">

  <project-notes>
	This is the initial draft of a functional package for IPsec 'n Friends. 
 </project-notes>

  <PPReference>
   <ReferenceTable>
      <PPTitle>Functional Package for IPsec 'n Friends</PPTitle>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2022-01-21</PPPubDate>
      <Keywords>IPsec; Internet Protocol</Keywords>
    </ReferenceTable>
  </PPReference>
  
  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2022-01-21</date>
      <subject>Start of first draft.</subject>
    </entry>
  </RevisionHistory>
	
<!-- PP-style preferences   -->
  <pp-preferences>
<!--        <pp-pref name="display-audit-with-sfrs">0</pp-pref> -->
    <audit-events-in-sfrs/>
  </pp-preferences>

	
<!-- 			-->
<!-- 1.0 Introduction   -->
<!-- 			-->
<sec:Introduction>
	
<!-- 			-->
<!-- 1.1 Overview	-->
<!--			-->
  <sec:Overview>
	Internet Protocol Security (IPsec) is a suite of open standards for ensuring private
	communications over public networks. It is typically used to encrypt Internet Protocol (IP) traffic 
	between hosts in a network and to create a virtual private network (VPN). 
	A VPN is a virtual network built on top of existing physical networks that provides a secure 
	communications mechanism for data and control information transmitted between computers or networks. 
	IPsec can also be used as a component that provides security for other
	internet protocols, such as the User Datagram Protocol (UDP). <h:p/> 
	The main components of IPsec are Encapsulating Security Protocol (ESP) and Internet Key Exchange (IKE).
	ESP is the protocol used to to transport encrypted and integrity-protected 
	communications across the network.  IKE is the protocol used to set up and manage IPsec connections.
	<h:p/>
	This <h:i>Functional Package for IPsec</h:i> provides a collection of requirements and evaluation activities for
	IPSec implementations. The intent of this package is to provide PP, cPP, and PP-Module authors with a readily
	consumable collection of SFRs and EAs to be integrated into their documents. This Package can be used to 
	to evaluate the IPsec functionality of TOEs that are not themselves VPN clients. For example,
	it could be used to evaluate the trusted channel functionality of an operating system that chooses to 
	use IPsec rather than SSH or TLS to implement secure remote management. And of course, this Package 
	can be used to encapsulate the IPsec-specific requirements in a VPN technology evaluation.<h:p/>
	As such, this Package attempts to specify only requirements and evaluation activities for IPsec implementations
	as distinct from those for VPN implementations, such as VPN gateways and clients. 
   </sec:Overview>

<!-- 			-->
<!-- 1.2 Terms		-->
<!-- 1.2.1 Common Criteria Terms -->
<!-- 1.2.2 Technology Terms -->
<!--			-->
	<tech-terms>
		<term abbr="CA" full="Certificate Authority">
			An entity that issues digital certificates.
		</term>
		<term abbr="CSR" full="Certificate Signing Request">
			A message sent from an applicant to a registration authority of the public key infrastructure 
			in order to apply for a digital identity certificate.
		</term>
		<term abbr="DN" full="Distinguished Name">
			A field in an X.509 certificate that uniquely identifies a person, organization, or business.
		</term>
		<term abbr="EAP" full="Extensible Authentication Protocol">
			A framework for adding arbitrary authentication methods in a standardized way to any
			protocol. The most common EAP method used with IKEv2 is EAP-TLS.
		</term>
		<term abbr="ECP" full="Eliptic Curve group modulo a Prime">
			Eliptic Curve Group Modulo a Prime.
		</term>
		<term abbr="ESN" full="Extended Sequence Number">
			An extension to the standard that allows IPsec to use 64-bit sequence numbers.
		</term>
		<term abbr="ESP" full="Encapsulating Security Payload">
			The protocol used by IPsec to transport encrypted and integrity-protected 
			communications across the network.
		</term>
		<term abbr="FQDN" full="Fully Qualified Domain Name">
			A domain name that specifies its exact location in the hierarchy of the Domain Name System (DNS).
		</term>
		<term abbr="ICMP" full="Internet Control Message Protocol">
			A supporting protocol in the Internet Protocol suite. It is used by network devices 
			to send error messages and operational information indicating success or failure when 
			communicating with another IP address. 
		</term>
		<term abbr="IKE" full="Internet Key Exchange">
			The protocol used by IPsec to set up and manage IPsec connections. This includes negotiating
			IPsec connection settings, authenticating endpoints to each other, defining 
			the security parameters of IPsec-protected connections, and negotiating session keys.  
			IKEv2 is the current version.
		</term>
		<term abbr="IPsec" full="Internet Protocol Security">
			A suite of open standards for ensuring private communications over public networks.
		</term>
		<term abbr="ISAKMP" full="Internet Security Association and Key Management Protocol">
			A protocol defined by RFC 2408 for establishing Security association (SA) and cryptographic keys in an
			Internet environment.	  
		</term>
		<term abbr="OCSP" full="Online Certificate Status Protocol">
			An Internet protocol used for obtaining the revocation status of an X.509 digital certificate.
		</term>
		<term abbr="PSK" full="Pre-Shared Key">
			A secret that was previously shared between two parties before it needs to be used.
		</term>
		<term abbr="SA" full="Security Association">
			The establishment of shared security attributes between two network entities to support secure 
			communication.
		</term>
		<term abbr="SPD" full="Security Policy Database">
			A set of rules that determines whether a packet is subject to IPsec processing.  
			Each entry in the SPD represents a policy that defines how the set of traffic covered under
			the policy will be processed.
		</term>
		<term abbr="UDP" full="User Datagram Protocol">
			A communications protocol that is primarily used to establish low-latency and loss-tolerating
			connections between applications on the internet. 
		</term>
		<term abbr="VPN" full="Virtual Private Network">
			An extension of a private network across a public or shared network that allows users to 
			exchange data as though they were connected directly to the private network.
		</term>
		<term abbr="XAUTH" full="Extended Authentication">
			An authentication scheme that supports an additional level of authentication by allowing the IPSec 
			gateway to request extended authentication from remote users.
		</term>
   </tech-terms>
     
<!-- 			-->
<!-- 1.3 Compliant Targets of Evaluation	-->
<!--			-->
    <sec:toes title="Compliant Targets of Evaluation">
		The Target of Evaluation (TOE) in this Functional Package (FP) is an IT product that includes 
		an implementation of IPsec.  Typically this is a VPN client or VPN gateway - for which IPsec 
		functionality is fundamental. But the TOE could also be an operating system or other
		IT product for which IPsec functionality is ancillary. This FP describes the security 
		functionality of IPsec in terms of <xref g="CC"/>. 
		<h:p/>
		The contents of this FP must be appropriately incorporated into a PP, cPP, or PP-Module. When this Package 
		is so incorporated, the ST must include selection-based requirements in accordance with the selections or 
		assignments indicated in the incorporating document.
		<h:p/>
		The PP, cPP, or PP-Module that instantiates this Package must typically include the following components in order
		to satisfy dependencies of this Package. It is the responsibility of the PP, cPP, or PP-Module author who 
		incorporates this FP to ensure that dependence on these components is satisfied, either by the TOE or by 
		assumptions about its Operational Environment.
		<h:p>An ST must identify the applicable version of the PP, cPP, or PP-Module and this
		Functional Package in its conformance claims.</h:p>
		
		<componentsneeded>
			<componentneeded>
				<componentid>FCS_CKM.1</componentid>
				<notes>To support key generation for IPsec, the incorporating document must
					include FCS_CKM.1 and specify the corresponding algorithms. </notes>
			</componentneeded>
			<componentneeded>
				<componentid>FCS_CKM.2</componentid>
					<notes>To support key establishment for IPsec, the incorporating document must
						include FCS_CKM.2 and specify the corresponding algorithms.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FCS_CKM_EXT.5</componentid>
					<notes>To support key derivation for IPsec, the incorporating document may need to include
						FCS_CKM_EXT.5 and specify the corresponding key derivation algorithms.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FCS_COP.1</componentid>
				<notes>
					To support the cryptography needed for IPsec communications, the incorporating document must include 
					FCS_COP.1 (iterating as needed) to specify AES with corresponding key sizes and modes, digital
					signature generation and verification function (at least one of RSA or ECDSA), a cryptographic hash
					function, and a keyed-hash message authentication function. In particular, this Package requires that the
					TOE support AES-GCM-128 and AES-GCM-256 for ESP, and AES-CBC-128 and AES-CBC-256 for IKE.					
				</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FCS_RBG_EXT.1</componentid>
				<notes>To support random bit generation needed for IPsec key generation, the incorporating document must
					include a requirement that specifies the TOE's ability to invoke or provide 
					random bit generation services, commonly identified as FCS_RBG_EXT.1.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FIA_EAP_EXT.1</componentid>
				<notes>If the TOE uses pre-shared keys transmitted using the Extensible Authentication Protocol (EAP)
					to establish IPsec connections, then this SFR must be claimed.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FIA_PSK_EXT.1</componentid>
				<notes>If the TOE uses pre-shared keys to establish IPsec connections, then this SFR must be claimed
					to specify requirements for the composition of pre-shared keys.</notes>
			</componentneeded>
			<componentneeded>
				<componentid>FIA_X509_EXT.1</componentid>
				<notes>To support establishment of IPSec communications using a public key algorithm that includes X.509, 
					the incorporating document must include FIA_X509_EXT.1. This documents requires that X.509v3 certificates
					be used in IKE peer authentication.</notes>
			</componentneeded>
			<componentneeded>
			<componentid>FIA_X509_EXT.2</componentid>
				<notes>To support establishment of IPsec communications using a public key algorithm that includes X.509, 
					the incorporating document must include FIA_X509_EXT.2 to specify the reasons for using X.509 certificates. 
					But is this really a dependency for this package? I don't think so.</notes>
			</componentneeded>
			<componentneeded>
			<componentid>FPT_STM.1</componentid>
				<notes>To support establishment of IPSec communications using a public key algorithm that includes X.509, 
					the incorporating document must include FPT_STM.1 or some other requirement that ensures reliable system time.  
					Note however that support for time-based rekey thresholds is selectable and not mandatory.</notes>
			</componentneeded>
		</componentsneeded>
	</sec:toes>
		
</sec:Introduction>
  
<!-- 			-->
<!-- 2.0 Conformance Claims	-->
<!--			-->
<sec:Conformance_Claims>
      <!-- SME: the TLS package also uses the cclaim id="Conformance Statement" but in that 
	package, the actual text "Conformance Statement" doesn't get displayed, which is what
      	we would expect should be happening here as well (it shows up right underneath the 
	"Conformance Claimes" section header so it is redundant to display both the title and the
 	almost-identical subtitle -->
<!--
      <cclaim id="Conformance Statement">
        <description>This Package serves to provide Protection Profiles with additional 
          SFRs and associated Evaluation Activities specific to SSH clients and servers.  
          </h:p><h:p>
          This Package conforms to Common Criteria
          <cite linkend="bibCC" /> for Information Technology Security Evaluation, Version 3.1,
          Revision 5. It is CC Part 2 extended conformant.
          </h:p><h:p>
          In accordance with CC Part 1, dependencies are not included when they are addressed
          by other SFRs. The evaluation activities provide adequate proof that any dependencies are
          also satisfied.</description>
      </cclaim>
-->
	  <!--    <cclaims>
    
    </cclaims> -->
</sec:Conformance_Claims>

<!-- 				-->
<!-- 3.0 Security Requirements 	-->
<!--				-->
	
<!-- 			-->
<!-- 3.1 Security Functional Requirements 	-->
<!--			-->
<sec:Security_Functional_Requirements>

	<!-- Audit table for mandatory requirements  -->
	<sec:ss-audit-table title="Auditable Events for Mandatory SFRs">
		<h:p>
			The auditable events specified in this Package are included in a Security Target 
			if the incorporating PP, cPP, or PP-Module supports audit event reporting through FAU_GEN.1
			and all other criteria in the incorporating document are met.
		</h:p>
		<audit-table table="mandatory">
			<h:div class="table-caption"><ctr ctr-type="Table" id="atref-mandatory">: Auditable Events for Mandatory SFRs</ctr></h:div>
		</audit-table>
	</sec:ss-audit-table>
	  
	<!-- 			-->
	<!-- 3.1.1 FCS: Cryptgraphic Support	-->
	<!--			-->
	<sec:cryptsup title="Cryptographic Support (FCS)">
	
	    <!-- 3.1.1.1 FCS_IPSEC_EXT.1 IPsec  -->	
        <f-component name="IPsec" cc-id="fcs_ipsec_ext.1" id="sfr-fcs-ipsec-ext-1">

			<!-- FCS_IPSEC_EXT.1.1 -->
			<f-element id="fcs-ipsec-ext-1e1">
				<title>The TSF shall implement IPsec as specified in <xref to="bibRFC4301"/>.</title>
				<note role="application">
<!--				## Below commented out text would better belong in a PP or Module that invokes the IPsec Package. 
					The Package requirements apply only to an IPsec implementation, so there is no notion of relying on 
					another entity for some or all IPsec services. ## -->
<!--					When the TOE is a standalone software application, the IPsec functionality must be implemented by the
					TSF, though it is permissible for the TSF to invoke cryptographic algorithm services from the TOE
					platform to support the TOE’s implementation of IPsec. The TOE may also rely on the TOE platform for
					X.509 certificate validation services, though it is the responsibility of the TSF to take the proper action
					based on the validation response that is returned.<h:p/> -->
<!--					It is also permissible for the TSF to rely on low-level capabilities of the platform to perform enforcement
					and routing functions as a result of the policies the TSF maintains. For example, while the TSF must
					provide the capability to implement the Security Policy Database abstraction, it is allowed for the TSF to
					depend on the platform-provided network stack/driver to perform the low-level packet filtering and
					routing actions once the TSF has set up those rules as defined by the SPD.<h:p/>  -->

					<xref to="bibRFC4301"/> calls for an IPsec implementation to protect IP traffic through the use
					of a Security Policy Database (SPD). The SPD is used to define how IP packets are
					to be handled: PROTECT the packet (e.g., encrypt the packet), BYPASS the IPsec
					services (e.g., no encryption), or DISCARD the packet (e.g., drop the packet). The
					SPD can be implemented in various ways, including router access control lists,
					firewall rulesets, a "traditional" SPD, etc. Regardless of the implementation
					details, there is a notion of a "rule" that a packet is "matched" against and a
					resulting action that takes place.<h:p/>

					While there must be a means to order the rules, a general approach to ordering
					is not mandated, as long as the TOE can distinguish the IP packets and apply the
					rules accordingly. There may be multiple SPDs (one for each network interface)
					but this is not required.<h:p/>

					It is permissible for the TSF to receive configuration of the IPsec behavior from an environmental
					source. For example, The SPD is established and populated through an administrative interface or
					application implemented by the entity that establishes the IPsec connection, such as a VPN gateway 
					or client application. This interface or application is outside the scope of this FP.<h:p/>

<!-- To replace					A VPN gateway fully implements the IPsec capability and provides an
					administrative interface to establish and populate an SPD. A VPN client is not
					required to provide an administrative interface to create or maintain an SPD.<h:p/>
					As an alternative, a client may provide an interface that can be used by another
					application or network entity, such as a VPN gateway, as a means to establish
					and populate the SPD. In either of these cases (the client provides an
					administrative interface, or an API), while the client is expected to maintain the
					SPD abstraction, it is permitted for the low-level enforcement and routing
					activities to be implemented by platform capabilities (e.g., a network driver) as
					configured by the client.   -->
					
				</note>
				<aactivity level="component">
					<TSS>
<!--						In addition to the TSS EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall
						perform the following:<h:p/> -->
						If the TOE boundary includes a general-purpose operating system or mobile device, the evaluator
						shall examine the TSS to ensure that it describes whether the IPsec functionality is 
						architecturally integrated with the platform itself or whether it is a separate executable that 
						is bundled with the platform.<h:p/>
					</TSS>
					<Guidance>
<!--						In addition to the Operational Guidance EAs for the individual FCS_IPSEC_EXT.1 elements below, the
						evaluator shall perform the following:<h:p/>  -->
						The evaluator shall ensure that the operational guidance contains any appropriate information for ensuring
						that the IPsec implementation can be properly configured.<h:p/>
						<!-- Not sure what hey are saying here -->
						Note in this case that the implementation of the IPsec protocol must be enforced entirely within the TOE
						boundary; i.e. it is not permissible for a software application TOE to be a graphical front-end for IPsec
						functionality implemented totally or in part by the underlying OS platform. The behavior referenced here
						is for the possibility that the configuration of the IPsec connection is initiated from outside the TOE, which
						is permissible so long as the TSF is solely responsible for enforcing the configured behavior. However, it is
						allowable for the TSF to rely on low-level platform-provided networking functions to implement the SPD
						from the client (e.g., enforcement of packet routing decisions).<h:p/>
					</Guidance>
					<Tests>
						As a prerequisite for performing the Test EAs for the individual FCS_IPSEC_EXT.1 elements below, the
						evaluator must do the following:<h:p/>
						The evaluator must create a test environment consisting of at least the components illustrated
						below. It is expected that the traffic generator will be used to construct network packets and will provide the
						evaluator with the ability manipulate fields in the ICMP, IPv4, IPv6, UDP, and TCP packet headers. The
						evaluator shall provide justification for any differences in the test environment.<h:p/>
						<figure entity="images/network.png" title="Test Environment" id="fig-testenv"/>
						Note that the evaluator shall perform all tests using the TOE and a representative sample of
						platforms listed in the ST (for TOEs that claim to support multiple platforms).<h:p/>
					</Tests>
				</aactivity>
				<aactivity level="element"> 
					<TSS>
						The evaluator shall examine the TSS and determine that it describes how the IPsec functionality is
						implemented.<h:p/>
						<!-- If the TOE is a standalone software application, the evaluator shall ensure that the TSS asserts that all
						IPsec functionality is implemented by the TSF. --> The evaluator shall ensure that the TSS identifies any
						platform functionality the TSF relies upon to support its IPsec implementation, if any (e.g. does it invoke
						cryptographic primitive functions from the platform’s cryptographic library, enforcement of packet
						routing decisions by low-level network drivers).<h:p/>
<!--						If the TOE is part of a general-purpose desktop or mobile operating system, the evaluator shall ensure
						that the TSS describes at a high level the architectural relationship between the VPN client portion of the
						TOE and the rest of the TOE (e.g. is the VPN client an integrated part of the OS or is it a standalone
						executable that is bundled into the OS package). If the SPD is implemented by the underlying platform in
						this case, then the TSS describes how the client interacts with the platform to establish and populate the
						SPD, including the identification of the platform's interfaces that are used by the client.<h:p/>  -->		    
						In all cases, the evaluator shall also ensure that the TSS describes how the IPsec implementation <!--client--> interacts with the network
						stack of the platform(s) on which it can run (e.g., does the client insert itself within the stack via kernel
						mods, does the IPsec implementation<!--the client--> simply invoke APIs to gain access to network services).<h:p/>		   
						The evaluator shall ensure that the TSS describes how the SPD is implemented and the rules for processing
						both inbound and outbound packets in terms of the IPsec policy. The TSS describes the rules that are
						available and the resulting actions available after matching a rule. The TSS describes how the available
						rules and actions form the SPD using terms defined in RFC 4301 such as BYPASS (e.g., no encryption),
						DISCARD (e.g., drop the packet), and PROTECT (e.g., encrypt the packet) actions defined in RFC 4301.			  
						As noted in section 4.4.1 of RFC 4301, the processing of entries in the SPD is non-trivial and the evaluator
						shall determine that the description in the TSS is sufficient to determine which rules will be applied given
						the rule structure implemented by the TOE. For example, if the TOE allows specification of ranges,
						conditional rules, etc., the evaluator shall determine that the description of rule processing (for both
						inbound and outbound packets) is sufficient to determine the action that will be applied, especially in the
						case where two different rules may apply. This description shall cover both the initial packets (that is, no
						SA is established on the interface or for that particular packet) as well as packets that are part of an
						established SA. <h:br/>
					</TSS>    
					<Guidance>
						The evaluator shall examine the operational guidance to verify that it describes how the SPD is created and
						configured. If there is an administrative interface to the IPsec implementation <!--client-->, then the guidance describes how the
						administrator specifies rules for processing a packet. The description includes all three cases - a rule that
						ensures packets are encrypted/decrypted, dropped, and allowing a packet to flow in plaintext. The
						evaluator shall determine that the description in the operational guidance is consistent with the
						description in the TSS, and that the level of detail in the operational guidance is sufficient to allow the
						administrator to set up the SPD in an unambiguous fashion. This includes a discussion of how ordering of
						rules impacts the processing of an IP packet.<h:p/>
						If the <!--client-->IPsec implementation is configured by an external application, such as the VPN gateway, then the operational
						guidance should indicate this and provide a description of how IPsec <!--the client--> is configured by the external
						application. The description should contain information as to how the SPD is established and set up in an
						unambiguous fashion. The description should also include what is configurable via the external
						application, how ordering of entries may be expressed, as well as the impacts that ordering of entries may
						have on the packet processing.<h:p/>
						In either case, the evaluator ensures the description provided In the TSS is consistent with the capabilities
						and description provided in the operational guidance.<h:br/>
					</Guidance>
					<Tests>
						Depending on the implementation, the evaluator may be required to use a VPN gateway or some form of
						application to configure the client. For Test 2, the evaluator is required to choose an application that
						allows for the configuration of the full set of capabilities of the IPsec implementation <!--VPN client (in conjunction with the
						platform)-->. For example, if the IPsec implementation <!--client--> supports <!--provides a robust interface that allows for
						-->specification of wildcards,
						subnets, etc., it is unacceptable for the evaluator to <!--choose a VPN Gateway that allows--> specify only
						a single fully qualified IP addresses in the rule.<h:p/>
						The evaluator shall perform the following tests:
						<testlist>
							<test>The evaluator shall configure an SPD <!--on the client -->that is capable of the following: dropping a
								packet, encrypting a packet, and allowing a packet to flow in plaintext. The selectors used in the
								construction of the rule shall be different such that the evaluator can generate a packet and send packets
								to the IPsec endpoint <!--client -->with the appropriate fields (fields that are used by the rule - e.g., the IP addresses, TCP/UDP
								ports) in the packet header. The evaluator performs both positive and negative test cases for each type
								of rule. The evaluator observes via the audit trail, and packet captures that the TOE exhibited the expected
								behavior: appropriate packets were dropped, allowed through without modification, were encrypted by
								the IPsec implementation.</test>
							<test>The evaluator shall devise several tests that cover a variety of scenarios for packet processing.
								These scenarios must exercise the range of possibilities for SPD entries and processing modes as outlined
								in the TSS and operational guidance. Potential areas to cover include rules with overlapping ranges and
								conflicting entries, inbound and outbound packets, and packets that establish SAs as well as packets that
								belong to established SAs. The evaluator shall verify, via the audit trail and packet captures, for each
								scenario that the expected behavior is exhibited, and is consistent with both the TSS and the operational
								guidance.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.2 OK -->
			<f-element id="fcs-ipsec-ext-1e2">
				<title>The TSF shall implement IPsec in
					<selectables>
						<selectable>tunnel mode</selectable>
						<selectable>transport mode</selectable>
					</selectables>.
				</title>
				<note role="application">
					If the TOE is used to connect to a VPN gateway for the purposes of establishing a
					secure connection to a private network, the ST author is expected to select
					tunnel mode. If the TOE uses IPsec to establish an end-to-end connection to
					another IPsec endpoint, the ST author is expected to select transport mode. If
					the TOE uses IPsec to establish a connection to a specific endpoint device for the
					purpose of secure remote administration, the ST author is expected to select
					transport mode.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check the TSS to ensure it states that IPsec can be established to operate 
						in tunnel mode or transport mode or both (as selected). <h:br/>
					</TSS>
					<Guidance>
						The evaluator shall confirm that the operational guidance contains instructions on how to
						configure the connection for each mode selected.<h:p/>
						If both transport mode and tunnel mode are implemented, the evaluator shall review the operational
						guidance to determine how the use of a given mode is specified.<h:br/>
					</Guidance>
					<Tests>
						The evaluator shall perform the following tests based on the selections chosen:
						<testlist>
							<test>[conditional] If tunnel mode is selected, the evaluator uses the operational guidance to
								configure the TOE to operate in tunnel mode and also configures a VPN gateway to operate in tunnel 
								mode. The evaluator configures the TOE and the VPN gateway to use any of the allowable cryptographic algorithms, 
								authentication methods, etc. to ensure an allowable SA can be negotiated. The evaluator shall then
								initiate a connection from the TOE to connect to the VPN gateway peer. The evaluator observes (for example,
								in the audit trail and the captured packets) that a successful connection was established using tunnel
								mode.
							</test>
							<test>[conditional] If transport mode is selected, the evaluator uses the operational guidance to
								configure the TOE to operate in transport mode and also configures an IPsec peer to accept IPsec
								connections using transport mode. The evaluator configures the TOE and the endpoint device to use any
								of the allowed cryptographic algorithms, authentication methods, etc. to ensure an allowable SA can be
								negotiated. The evaluator then initiates a connection from the TOE to connect to the remote endpoint.
								The evaluator observes (for example, in the audit trail and the captured packets) that a successful
								connection was established using the transport mode.
							</test>
							<test>[conditional] If both tunnel mode and transport mode are selected, the evaluator shall modify the
								testing for FCS_IPSEC_EXT.1 to include the supported mode for SPD PROTECT entries to show that they
								apply only to traffic that is transmitted or received using the indicated mode.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.3 OK -->
			<f-element id="fcs-ipsec-ext-1e3">
				<title>The TSF shall have a nominal, final entry in the SPD that matches anything that
					is otherwise unmatched, and discards it.
				</title>
				<aactivity level="element">
					<TSS>
						The evaluator shall examine the TSS to verify that the TSS provides a description of how a packet is
						processed against the SPD and that if no “rules” are found to match, that a final rule exists, either implicitly
						or explicitly, that causes the network packet to be discarded.<h:br/>
					</TSS>
					<Guidance>
						The evaluator shall check that the operational guidance provides instructions on how to construct or
						acquire the SPD and uses the guidance to configure the TOE for the following test.<h:br/>
					</Guidance>
					<Tests>
						The evaluator shall perform the following test:<h:p/>
						The evaluator shall configure the SPD such that it has entries that contain operations that DISCARD,
						PROTECT, and (if applicable) BYPASS network packets. The evaluator may use the SPD that was created
						for verification of FCS_IPSEC_EXT.1.1. The evaluator shall construct a network packet that matches a
						BYPASS entry and send that packet. The evaluator should observe that the network packet is passed to
						the proper destination interface with no modification. The evaluator shall then modify a field in the packet
						header; such that it no longer matches the evaluator-created entries (there may be a “TOE-created” final
						entry that discards packets that do not match any previous entries). The evaluator sends the packet, and
						observes that the packet was not permitted to flow to any of the TOE’s interfaces.
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.4 OK -->
			<f-element id="fcs-ipsec-ext-1e4">
				<title>The TSF shall implement the IPsec protocol ESP as defined by <xref to="bibRFC4303"/> using the cryptographic 
					algorithms [<h:i>AES-GCM-128 as specified in <xref to="bibRFC4106"/>,
									AES-GCM-256 as specified in <xref to="bibRFC4106"/>,</h:i>
					<selectables>
						<selectable id="sel-ipsec-esp-cbc-128">AES-CBC-128 with 
							<selectables>
								<selectable>HMAC-SHA-1</selectable>
								<selectable>HMAC-SHA-256</selectable>
								<selectable>HMAC-SHA-384</selectable>
								<selectable>HMAC-SHA-512</selectable>
							</selectables> as specified in <xref to="bibRFC3602"/></selectable>
						<selectable id="sel-ipsec-esp-cbc-256">AES-CBC-256 with
							<selectables>
								<selectable>HMAC-SHA-1</selectable>
								<selectable>HMAC-SHA-256</selectable>
								<selectable>HMAC-SHA-384</selectable>
								<selectable>HMAC-SHA-512</selectable>
							</selectables> as specified in <xref to="bibRFC3602"/></selectable>
						<selectable exclusive="yes">no other algorithms</selectable>
					</selectables>].
				</title>
				<note role="application">
					If this functionality is configurable, the TSF may be configured by a VPN gateway
					or by an Administrator of the TOE itself.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall examine the TSS to verify that the algorithms AES-GCM-128 and AES-GCM-256 are
						implemented. If the ST author has selected either AES-CBC-128 or AES-CBC-256 in the requirement, 
						then the evaluator verifies the TSS describes these as well. In addition, the evaluator ensures 
						that the SHA-based HMAC algorithm conforms to the algorithms specified in the relevant iteration of
						FCS_COP.1 from the incorporating PP that applies to keyed-hash message authentication.<h:br/>
					</TSS>
					<Guidance>
						The evaluator checks the operational guidance to ensure it provides instructions on how the TOE is
						configured to use the algorithms selected in this component and whether this is performed through direct
						configuration, defined during initial installation, or defined by acquiring configuration settings from an
						environmental component.<h:br/>
					</Guidance>
					<Tests>
						<testlist>
							<test>
								The evaluator shall configure the TOE as indicated in the operational guidance configuring the TOE
								to using each of the AES-GCM-128 and AES-GCM-256 algorithms, and attempt to establish a connection
								using ESP. If the ST Author has selected either AES-CBC-128 or AES-CBC-256, the TOE is configured to use
								those algorithms and the evaluator attempts to establish a connection using ESP for those algorithms
								selected.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.5 OK -->
			<f-element id="fcs-ipsec-ext-1e5">
				<title>The TSF shall implement the protocol:
					<selectables linebreak="yes">
						<selectable id="sel-ipsec-5-ikev1">IKEv1, using Main Mode for Phase I exchanges, as defined in <xref to="bibRFC2407"/>, 
							<xref to="bibRFC2408"/>, <xref to="bibRFC2409"/>, <xref to="bibRFC4109"/>, 
							<selectables>
								<selectable><xref to="bibRFC4304"/> for extended sequence numbers</selectable>
								<selectable exclusive="yes">no other RFCs for extended sequence numbers</selectable>
							</selectables>, 
							<selectables>
								<selectable><xref to="bibRFC4868"/> for hash functions</selectable>
								<selectable exclusive="yes">no other RFCs for hash functions</selectable>
							</selectables>, and 
							<selectables onlyone="yes">
								<selectable>support for XAUTH</selectable>
								<selectable>no support for XAUTH</selectable>
							</selectables></selectable>
						<selectable id="sel-ipsec-5-ikev2">IKEv2 as defined in <xref to="bibRFC7296"/> (with mandatory support for NAT traversal 
							as specified in section 2.23), <xref to="bibRFC8784"/>, <xref to="bibRFC8247"/>, and 
							<selectables>
								<selectable><xref to="bibRFC4868"/> for hash functions</selectable>
								<selectable exclusive="yes">no other RFCs for hash functions</selectable>
							</selectables>
						</selectable>
					</selectables>.
				</title>
				<aactivity level="element">
					<TSS>
						The evaluator shall examine the TSS to verify that IKEv1 or IKEv2 (or both) are implemented. If IKEv1 is
						implemented, the evaluator shall verify that the TSS indicates whether or not XAUTH is supported, and
						that aggressive mode is not used for IKEv1 Phase 1 exchanges (i.e. only main mode is used). It may be that
						these are configurable options.<h:br/>
					</TSS>
					<Guidance>
						The evaluator shall check the operational guidance to ensure it instructs the administrator how to
						configure the TOE to use IKEv1 or IKEv2 (as selected), and uses the guidance to configure the TOE to
						perform NAT traversal for the test below. If XAUTH is implemented, the evaluator shall verify that the
						operational guidance provides instructions on how it is enabled or disabled. <h:p/>
						If the TOE supports IKEv1, the evaluator shall verify that the operational guidance either asserts that only	
						main mode is used for Phase 1 exchanges, or provides instructions for disabling aggressive mode.<h:br/>
					</Guidance>
					<Tests>
						<testlist>
							<test>
								The evaluator shall configure the TOE so that it will perform NAT traversal processing as described
								in the TSS and <xref to="bibRFC7296"/>, section 2.23. The evaluator shall initiate an IPsec connection and determine that
								the NAT is successfully traversed. If the TOE supports IKEv1 with or without XAUTH, the evaluator shall
								verify that this test can be successfully repeated with XAUTH enabled and disabled in the manner specified
								by the operational guidance. If the TOE supports only IKEv1 with XAUTH, the evaluator shall verify that
								connections not using XAUTH are unsuccessful. If the TOE supports only IKEv1 without XAUTH, the
								evaluator shall verify that connections using XAUTH are unsuccessful.</test>
							<test>[conditional] If the TOE supports IKEv1, the evaluator shall perform any applicable operational
								guidance steps to disable the use of aggressive mode and then attempt to establish a connection using an
								IKEv1 Phase 1 connection in aggressive mode. This attempt should fail. The evaluator shall show that the
								TOE rejects a VPN gateway from initiating an IKEv1 Phase 1 connection in aggressive mode. The
								evaluator should then show that main mode exchanges are supported.</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.6 OK -->
			<f-element id="fcs-ipsec-ext-1e6">
				<title>The TSF shall ensure the encrypted payload in the 
					<selectables>
						<selectable id="sel-ipsec-6-ikev1">IKEv1</selectable>
						<selectable id="sel-ipsec-6-ikev2">IKEv2</selectable>
					</selectables> 
					protocol uses the cryptographic algorithms [<h:i>AES-CBC-128, AES-CBC-256 as specified in 
					<xref to="bibRFC6379"/> and </h:i>
					<selectables>
						<selectable id="sel-ipsec-ike-gcm-128">AES-GCM-128 as specified in <xref to="bibRFC5282"/></selectable>
						<selectable id="sel-ipsec-ike-gcm-256">AES-GCM-256 as specified in <xref to="bibRFC5282"/></selectable>
						<selectable exclusive="yes">no other algorithm</selectable>
					</selectables>.
				</title>
				<note role="application">
					If this functionality is configurable, the TSF may be configured by a VPN gateway
					or by an Administrator of the TOE itself.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall ensure the TSS identifies the algorithms used for encrypting the IKEv1 or IKEv2
						payload, and that the algorithms AES-CBC-128, AES-CBC-256 are specified, and if others are chosen in the
						selection of the requirement, those are included in the TSS discussion.<h:br/>
					</TSS>
					<Guidance>
						The evaluator checks the operational guidance to ensure it provides instructions on how the TOE is
						configured to use the algorithms selected in this component and whether this is performed through direct
						configuration, defined during initial installation, or defined by acquiring configuration settings from an
						environmental component.<h:br/>
					</Guidance>
					<Tests>
						The evaluator shall use the operational guidance to configure the TOE (or to configure the Operational
						Environment to have the TOE receive configuration) to perform the following test for each ciphersuite
						selected for each version of IKE selected:<h:p/>
						The evaluator shall configure the TOE to use the ciphersuite under test to encrypt the IKEv1 or
						IKEv2 payload and establish a connection with a peer device, which is configured to accept the
						payload encrypted only using the indicated ciphersuite. The evaluator will confirm the algorithm was that used
						in the negotiation. The evaluator will confirm that the connection is successful by confirming that data
						can be passed through the connection once it is established. For example, the evaluator may connect to
						a webpage on the remote network and verify that it can be reached.
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EX.1.7 OK -->
			<f-element id="fcs-ipsec-ext-1e7"> 
				<title>The TSF shall ensure that 
					<selectables>
						<selectable id="sel-ipsec-ikev2-sa-config">IKEv2 SA lifetimes can be configured by 
							<selectables>
								<selectable>an Administrator</selectable>
								<selectable>a VPN gateway</selectable>
							</selectables> 
							based on 
							<selectables>
								<selectable>number of packets/number of bytes</selectable>
								<selectable>length of time</selectable>
							</selectables>
						</selectable>
						<selectable id="sel-ipsec-ikev1-sa-config">IKEv1 SA lifetimes can be configured by 
							<selectables>
								<selectable>an Administrator</selectable>
								<selectable>a VPN gateway</selectable>
							</selectables> 
							based on 
							<selectables>
								<selectable>number of packets/number of bytes</selectable>
								<selectable>length of time</selectable>
							</selectables>
						</selectable>
						<selectable id="sel-ipsec-ikev1-sa-fixed">IKEv1 SA lifetimes are fixed based on 
							<selectables>
								<selectable>number of packets/number of bytes</selectable>
								<selectable>length of time</selectable>
							</selectables>
						</selectable>
					</selectables>, and that if length of time is used, it shall include at least one option that
					is 24 hours or less for Phase 1 SAs and 8 hours or less for Phase 2 SAs.
				</title>
				<note role="application">
					The ST author is afforded a selection based on the version of IKE in their
					implementation. There is a further selection within this selection that allows the
					ST author to specify which entity is responsible for “configuring” the life of the
					SA. An implementation that allows an administrator to configure the IPsec endpoint or a
					VPN gateway that pushes the SA lifetime down to the IPsec endpoint are both acceptable.<h:p/>
					As far as SA lifetimes are concerned, the TOE can limit the lifetime based on the
					number of bytes transmitted, or the number of packets transmitted. Either
					packet-based or volume-based SA lifetimes are acceptable; the ST author makes
					the appropriate selection to indicate which type of lifetime limits are supported.<h:p/>
					The ST author chooses either the IKEv1 requirements or IKEv2 requirements (or
					both, depending on the selection in FCS_IPSEC_EXT.1.5. The IKEv1 requirement
					can be accomplished either by providing Authorized Administrator-configurable
					lifetimes (with appropriate instructions in documents mandated by AGD_OPE),
					or by “hard coding” the limits in the implementation. For IKEv2, there are no
					hard-coded limits, but in this case it is required that an administrator be able to
					configure the values. In general, instructions for setting the parameters of the
					implementation, including lifetime of the SAs, should be included in the 
					operational guidance generated for AGD_OPE. It is appropriate to refine the
					requirement in terms of number of MB/KB instead of number of packets, as long
					as the TOE is capable of setting a limit on the amount of traffic that is protected
					by the same key (the total volume of all IPsec traffic protected by that key).
				</note>
				<aactivity level="element">
					<TSS>There are no TSS EAs for this requirement.<h:br/></TSS>
					<Guidance>The evaluator shall check the operational guidance to ensure it provides instructions on how the TOE
						configures the values for SA lifetimes. In addition, the evaluator shall check that the guidance has the
						option for either the Administrator or VPN gateway to configure Phase 1 SAs if time-based limits are
						supported. Currently there are no values mandated for the number of packets or number of bytes, the
						evaluator shall simply check the operational guidance to ensure that this can be configured if selected in
						the requirement.<h:br/>
					</Guidance>
					<Tests>
						When testing this functionality, the evaluator needs to ensure that both IPsec endpoints are configured
						appropriately. From the RFC: “A difference between IKEv1 and IKEv2 is that in IKEv1 SA lifetimes were
						negotiated. In IKEv2, each end of the SA is responsible for enforcing its own lifetime policy on the SA and
						rekeying the SA when necessary. If the two ends have different lifetime policies, the end with the shorter
						lifetime will end up always being the one to request the rekeying. If the two ends have the same lifetime
						policies, it is possible that both will initiate a rekeying at the same time (which will result in redundant
						SAs). To reduce the probability of this happening, the timing of rekeying requests SHOULD be jittered.”<h:p/>
						Each of the following tests shall be performed for each version of IKE selected in the FCS_IPSEC_EXT.1.5
						protocol selection:<h:p/>
						Each of the following tests shall be performed for each version of IKE selected in the
						FCS_IPSEC_EXT.1.5 protocol selection:
						<testlist>
							<test>The evaluator shall configure a maximum lifetime in terms of the number of packets (or
								bytes) allowed following the operational guidance. The evaluator shall establish an SA and determine that
								once the allowed number of packets (or bytes) through this SA is exceeded, the connection is closed.</test>
							<test>The evaluator shall construct a test where a Phase 1 SA is established and attempted
								to be maintained for more than 24 hours before it is renegotiated. The evaluator shall observe that this
								SA is closed or renegotiated in 24 hours or less. If such an action requires that the TOE be configured in a
								specific way, the evaluator shall implement tests demonstrating that the configuration capability of the
								TOE works as documented in the operational guidance.</test>
							<test>The evaluator shall perform a test similar to Test 2 for Phase 2 SAs, except that the
								lifetime will be 8 hours or less instead of 24 hours or less.</test>
							<test>If a fixed limit for IKEv1 SAs is supported, the evaluator shall establish an SA and
								observe that the connection is closed after the fixed traffic or time value is reached.</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.8 OK -->
			<f-element id="fcs-ipsec-ext-1e8">
				<title>The TSF shall ensure that all IKE protocols implement DH Groups [
					<h:i>19 (256-bit Random ECP), 20 (384-bit Random ECP), and </h:i>
					<selectables>
						<selectable>24 (2048-bit MODP with 256-bit POS)</selectable>
						<selectable>15 (3072-bit MODP)</selectable>
						<selectable>14 (2048-bit MODP)</selectable>
						<selectable exclusive="yes">no other DH groups</selectable>
					</selectables>].
				</title>
				<note role="application">
					The selection is used to specify additional DH groups supported. This applies to
					IKEv1 and IKEv2 exchanges. It should be noted that if any additional DH groups
					are specified, they must comply with the requirements (in terms of the
					ephemeral keys that are established) listed in <no-link>FCS_CKM.1</no-link>.<h:p/>
					Since the implementation may allow different Diffie-Hellman groups to be
					negotiated for use in forming the SAs, the assignments in FCS_IPSEC_EXT.1.9
					and FCS_IPSEC_EXT.1.10 may contain multiple values. For each DH group
					supported, the ST author consults Table 2 in <xref to="bibNIST80057"/> to determine the “bits of
					security” associated with the DH group. Each unique value is then used to fill in
					the assignment (for 1.9 they are doubled; for 1.10 they are inserted directly into
					the assignment). For example, suppose the implementation supports DH group
					14 (2048-bit MODP) and group 20 (ECDH using NIST curve P-384). From Table 2,
					the bits of security value for group 14 is 112, and for group 20 it is 192. For
					FCS_IPSEC_EXT.1.9, then, the assignment would read “[224, 384]” and for
					FCS_IPSEC_EXT.1.10 it would read “[112, 192]” (although in this case the
					requirement should probably be refined so that it makes sense mathematically).
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check to ensure that the DH groups specified in the requirement are listed as being
						supported in the TSS. If there is more than one DH group supported, the evaluator checks to ensure the
						TSS describes how a particular DH group is specified/negotiated with a peer.<h:br/>
					</TSS>
					<Guidance>There are no AGD EAs for this requirement.<h:br/></Guidance>
					<Tests>The evaluator shall perform the following test: 
						<testlist>
							<test>For each supported DH group, the evaluator shall test to ensure that all supported IKE 
								protocols can be successfully completed using that particular DH group.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.9 OK -->
			<f-element id="fcs-ipsec-ext-1e9">
				<title>The TSF shall generate the secret value x used in the
					IKE Diffie-Hellman key exchange (“x” in g^x mod p) using the random bit
					generator specified in FCS_RBG_EXT.1, and having a length of at least
					<assignable>(one or more) number(s) of bits that is at least twice the “bits of
					security” value associated with the negotiated Diffie-Hellman group as listed in
					Table 2 of NIST SP 800-57, Recommendation for Key Management: Part 1 - General</assignable> bits.
<!--					Table 2 of <xref to="bibNIST80057"/>, Recommendation for Key Management: Part 1 - General</assignable> bits. -->
				</title>
				<aactivity level="element">
					<TSS>
						The evaluator shall check to ensure that, for each DH group supported, the TSS describes the process for
						generating "x" (as defined in FCS_IPSEC_EXT.1.9) and each nonce. The evaluator shall verify that the TSS
						indicates that the random number generated that meets the requirements in this FP is used, and that the
						length of "x" and the nonces meet the stipulations in the requirement.<h:br/>
					</TSS>
					<Guidance>There are no AGD EAs for this requirement.<h:br/></Guidance>
					<Tests>There are no test EAs for this requirement.</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.10 OK -->
			<f-element id="fcs-ipsec-ext-1e10">
				<title>The TSF shall generate nonces used in IKE exchanges in a manner such that the
					probability that a specific nonce value will be repeated during the life a specific
					IPsec SA is less than 1 in 2^<assignable>(one or more) “bits of security” value(s)
					associated with the negotiated Diffie-Hellman group as listed in Table 2 of 
					NIST SP 800-57, Recommendation for Key Management: Part 1 - General</assignable>.
<!--					<xref to="bibNIST80057"/>, Recommendation for Key Management: Part 1 - General</assignable>. -->
				</title>
				<aactivity level="element">
					EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.9.
					<no-tests/>
				</aactivity>
			</f-element>
          
			<!-- FCS_IPSEC_EXT.1.11 -->
			<f-element id="fcs-ipsec-ext-1e11">
				<title>The TSF shall ensure that all IKE protocols perform peer authentication using  
					<selectables>
						<selectable>RSA</selectable>
						<selectable>ECDSA</selectable>
					</selectables> 
					that use X.509v3 certificates that conform to <xref to="bibRFC4945"/> and 
					<selectables>
						<selectable id="sel-ipsec-psk-eap-tls">Pre-shared Keys transmitted via EAP-TLS</selectable>
						<selectable id="sel-ipsec-psk-eap-ttls">Pre-shared Keys transmitted via EAP-TTLS with mutual authentication</selectable>
						<selectable id="sel-ipsec-psk">Pre-shared Keys not transmitted via EAP</selectable>
						<selectable exclusive="yes">no other method</selectable>
					</selectables>.
				</title>
				<note role="application">
					At least one public-key-based Peer Authentication method is required in order to
					conform to this PP-Module; one or more of the public key schemes is chosen by
					the ST author to reflect what is implemented. The ST author also ensures that
					appropriate FCS requirements reflecting the algorithms used (and key
					generation capabilities, if provided) are listed to support those methods. Note
					that the TSS will elaborate on the way in which these algorithms are to be used 
					(for example, RFC 2409 specifies three authentication methods using public keys;
					each one supported will be described in the TSS).<h:p/>
<!-- TODO: Does FIA_PSK_EXT.1 need to be implemented here? No. It must be included in the ecapsulating document -->
					If any selection with “pre-shared keys” is selected, the selection-based requirement FIA_PSK_EXT.1
					must be claimed. FIA_PSK_EXT.1 includes the options for MFA solutions, it may be brought in via this selection or via the 
					optional FPF_MFA_EXT.1 requirement.<h:p/> 
					When pre-shared keys are supported for IKE v2, ‘Pre-shared Keys transmitted via EAP-TLS’ and/or 
					‘Pre-shared Keys transmitted via EAP-TTLS’ is selected to indicate client verification using certificates 
					in a mutually authenticated TLS handshake, and verification of provided PSK protected under the TLS channel. 
					When Pre-shared Keys are supported for IKE v1, the first selection is claimed to indicate one of the mechanisms 
					for using PSK described in the RFC. <h:p/>
					It is acceptable for different use cases to leverage different selections, if this is the case it shall be identified.
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator ensures that the TSS identifies RSA or ECDSA or both as being used to perform peer
						authentication.<h:p/>
						If any selection with pre-shared keys is chosen in the selection, the evaluator shall check to ensure that the TSS describes
						how those selections work in conjunction with authentication of IPsec connections.<h:p/>
						The evaluator shall ensure that the TSS describes how the TOE compares the peer’s presented identifier
						to the reference identifier. This description shall include whether the certificate presented identifier is
						compared to the ID payload presented identifier, which field(s) of the certificate are used as the presented
						identifier (DN, Common Name, or SAN) and, if multiple fields are supported, the logical order comparison.
						If the ST author assigned an additional identifier type, the TSS description shall also include a description
						of that type and the method by which that type is compared to the peer’s presented certificate.<h:br/>
					</TSS>
					<Guidance>
						If any selection with “Pre-shared Keys” is selected, the evaluator shall check that the operational guidance 
						describes any configuration necessary to enable any selected authentication mechanisms. <h:p/>
						If any method other than no other method is selected, the evaluator shall check that the operational guidance 
						describes any configuration necessary to enable any selected authentication mechanisms.<h:p/>
						The evaluator ensures the operational guidance describes how to set up the TOE to use the cryptographic
						algorithms RSA or ECDSA, as selected.<h:p/>
						In order to construct the environment and configure the TOE for the following tests, the evaluator will
						ensure that the operational guidance also describes how to configure the TOE to connect to a trusted CA,
						and ensure a valid certificate for that CA is loaded into the TOE as a trusted CA.<h:p/>
						The evaluator shall also ensure that the operational guidance includes the configuration of the reference
						identifiers for the peer.<h:br/>
					</Guidance>
					<Tests>
<!-- This needs to be reworded since the X509 SFRs are not in here.
And the X509-specific tests need to be removed. -->
						For efficiency’s sake, the testing that is performed here has been combined with the testing for
						<h:b>FIA_X509_EXT.2</h:b> and <h:b>FIA_X509_EXT.3</h:b> (for IPsec connections and depending on the Base-PP),
						<h:b>FCS_IPSEC_EXT.1.12</h:b>, and <h:b>FCS_IPSEC_EXT.1.13</h:b>. The following tests shall be repeated for each peer
						authentication protocol selected in the <h:b>FCS_IPSEC_EXT.1.11</h:b> selection above:
						<testlist>
							<test>The evaluator shall have the TOE generate a public-private key pair, and submit a CSR (Certificate
								Signing Request) to a CA (trusted by both the TOE and the peer VPN used to establish a connection) for
								its signature. The values for the DN (Common Name, Organization, Organizational Unit, and Country) will
								also be passed in the request. Alternatively, the evaluator may import to the TOE a previously generated
								private key and corresponding certificate.
							</test>
							<test>The evaluator shall configure the TOE to use a private key and associated certificate signed by a
								trusted CA and shall establish an IPsec connection with the peer.                
							</test>
							<test>The evaluator shall test that the TOE can properly handle revoked certificates – conditional on
								whether CRL or OCSP is selected; if both are selected, and then a test is performed for each method. For
								this current version of the PP-Module, the evaluator has to only test one up in the trust chain (future
								drafts may require to ensure the validation is done up the entire chain). The evaluator shall ensure that a
								valid certificate is used, and that the SA is established. The evaluator then attempts the test with a
								certificate that will be revoked (for each method chosen in the selection) to ensure when the certificate
								is no longer valid that the TOE will not establish an SA
							</test>
							<test>[conditional] For each selection made, the evaluator shall verify factors are required, as indicated in the
								operational guidance, to establish an IPsec connection with the server. 
							</test>
							For each supported identifier type (excluding DNs), the evaluator shall repeat the following tests:
							<test>For each field of the certificate supported for comparison, the evaluator shall configure the peer’s
								reference identifier on the TOE (per the administrative guidance) to match the field in the peer’s
								presented certificate and shall verify that the IKE authentication succeeds.
							</test>
							<test>For each field of the certificate support for comparison, the evaluator shall configure the peer’s
								reference identifier on the TOE (per the administrative guidance) to not match the field in the peer’s
								presented certificate and shall verify that the IKE authentication fails.
							</test>
							The following tests are conditional:
							<test>[conditional] If, according to the TSS, the TOE supports both Common Name and SAN certificate
								fields and uses the preferred logic outlined in the Application Note, the tests above with the Common
								Name field shall be performed using peer certificates with no SAN extension. Additionally, the evaluator
								shall configure the peer’s reference identifier on the TOE to not match the SAN in the peer’s presented
								certificate but to match the Common Name in the peer’s presented certificate, and verify that the IKE
								authentication fails.
							</test>
							<test>[conditional] If the TOE supports DN identifier types, the evaluator shall configure the peer's
								reference identifier on the TOE (per the administrative guidance) to match the subject DN in the peer's
								presented certificate and shall verify that the IKE authentication succeeds. To demonstrate a bit-wise
								comparison of the DN, the evaluator shall change a single bit in the DN (preferably, in an Object Identifier
								(OID) in the DN) and verify that the IKE authentication fails. <h:b>To demonstrate a comparison of DN values,
								the evaluator shall change any one of the four DN values and verify that the IKE authentication fails.</h:b>
							</test>
							<test>[conditional] If the TOE supports both IPv4 and IPv6 and supports IP address identifier types, the
								evaluator must repeat test 1 and 2 with both IPv4 address identifiers and IPv6 identifiers. Additionally,
								the evaluator shall verify that the TOE verifies that the IP header matches the identifiers by setting the
								presented identifiers and the reference identifier with the same IP address that differs from the actual IP
								address of the peer in the IP headers and verifying that the IKE authentication fails.
							</test>
							<test>[conditional] If, according to the TSS, the TOE performs comparisons between the peer’s ID
								payload and the peer’s certificate, the evaluator shall repeat the following test for each combination of
								supported identifier types and supported certificate fields (as above). The evaluator shall configure the
								peer to present a different ID payload than the field in the peer’s presented certificate and verify that the
								TOE fails to authenticate the IKE peer.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.12 OK -->
			<f-element id="fcs-ipsec-ext-1e12">
				<title>The TSF shall not establish an SA if the [
					<selectables>
						<selectable>IP address</selectable>
						<selectable>Fully Qualified Domain Name (FQDN)</selectable>
						<selectable>user FQDN</selectable>
						<selectable>Distinguished Name (DN)</selectable>
					</selectables> 
					and 
					<selectables>
						<selectable exclusive="yes">no other reference identifier type</selectable>
						<selectable><assignable>other supported reference identifier types</assignable></selectable>
					</selectables>] contained in a certificate does not match the expected value(s) for the
					entity attempting to establish a connection.
				</title>
				<note role="application">
					The TOE must support at least one of the following identifier types: IP address,
					Fully Qualified Domain Name (FQDN), user FQDN, or Distinguished Name (DN).
					In the future, the TOE will be required to support all of these identifier types. The
					TOE is expected to support as many IP address formats (IPv4 and IPv6) as IP
					versions supported by the TOE in general. The ST author may assign additional
					supported identifier types in the second selection.
				</note>
				<aactivity level="element">
					EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.
					<no-tests/>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT1.13 -->
			<f-element id="fcs-ipsec-ext-1e13">
				<title>The TSF shall not establish an SA if the presented identifier does not match the
					configured reference identifier of the peer.
				</title>
				<note role="application">
					At this time, only the comparison between the presented identifier in the peer’s
					certificate and the peer’s reference identifier is mandated by the testing below.
					However, in the future, this requirement will address two aspects of the peer
					certificate validation: 1) comparison of the peer’s ID payload to the peer’s
					certificate which are both presented identifiers, as required by RFC 4945 and 2)
					verification that the peer identified by the ID payload and the certificate is the
					peer expected by the TOE (per the reference identifier). At that time, the TOE will
					be required to demonstrate both aspects (i.e. that the TOE enforces that the
					peer’s ID payload matches the peer’s certificate which both match configured
					peer reference identifiers).<h:p/>
					Excluding the DN identifier type (which is necessarily the Subject DN in the peer
					certificate), the TOE may support the identifier in either the Common Name or
					Subject Alternative Name (SAN) or both. If both are supported, the preferred
					logic is to compare the reference identifier to a presented SAN, and only if the
					peer’s certificate does not contain a SAN, to fall back to a comparison against
					the Common Name. In the future, the TOE will be required to compare the
					reference identifier to the presented identifier in the SAN only, ignoring the
					Common Name.<h:p/>
<!-- This SFR is not in the package. As such, I think this note can be removed. -->
					The configuration of the peer reference identifier is addressed by
					FMT_SMF.1.1/VPN.
				</note>
				<aactivity level="element">
					EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.
					<no-tests/>
				</aactivity>
			</f-element>
			
			<!-- FCS_IPSEC_EXT.1.14 -->
			<f-element id="fcs-ipsec-ext-1e14">
<!-- Why does this SFR try to impose requirements on something that is not the TOE? -->
				<title>The 
					<selectables>
						<selectable>TSF</selectable>
						<selectable>VPN gateway</selectable>
					</selectables> shall be able to ensure by default that the strength of the symmetric algorithm 
					(in terms of the number of bits in the key) negotiated to protect the 
					<selectables>
						<selectable>IKEv1 Phase 1</selectable>
						<selectable>IKEv2 IKE_SA</selectable>
					</selectables> 
					connection is greater than or equal to the strength of the symmetric algorithm
					(in terms of the number of bits in the key) negotiated to protect the 
					<selectables>
						<selectable>IKEv1 Phase 2</selectable>
						<selectable>IKEv2 CHILD_SA</selectable>
					</selectables> connection.
				</title>
				<note role="application">
					If this functionality is configurable, the TSF may be configured by a VPN gateway
					or by an Administrator of the TOE itself<h:p/>
					The ST author chooses either or both of the IKE selections based on what is
					implemented by the TOE. Obviously, the IKE versions chosen should be
					consistent not only in this element, but with other choices for other elements in
					this component. While it is acceptable for this capability to be configurable, the
					default configuration in the evaluated configuration (either "out of the box" or
					by configuration guidance in the AGD documentation) must enable this
					functionality.<h:p/>
				</note>
				<aactivity level="element">
					<TSS>
						The evaluator shall check that the TSS describes the potential strengths (in terms of the number of bits in
						the symmetric key) of the algorithms that are allowed for the IKE and ESP exchanges. The TSS shall also
						describe the checks that are done when negotiating IKEv1 Phase 2 and IKEv2 CHILD_SA suites to ensure
						that the strength (in terms of the number of bits of key in the symmetric algorithm) of the negotiated
						algorithm is less than or equal to that of the IKE SA negotiation that is being protected.<h:br/>
					</TSS>
					<Guidance>There are no AGD EAs for this requirement.<h:br/></Guidance>
					<Tests>The evaluator follows the guidance to configure the TOE to perform the following tests for each version
						of IKE supported:
						<testlist>
							<test>The evaluator shall successfully negotiate an IPsec connection using each of the supported algorithms 
							and hash functions identified in the requirements.
							</test>
							<test>The evaluator shall attempt to establish an SA for ESP that selects an encryption algorithm with
								greater strength than that being used for the IKE SA (i.e., symmetric algorithm with a key size larger 
								than that being used for the IKE SA). Such attempts should fail.
							</test>
							<test>The evaluator shall attempt to establish an IKE SA using an algorithm that is not one of the supported 
								algorithms and hash functions identified in the requirements. Such an attempt should fail.
							</test>
							<test>The evaluator shall attempt to establish an SA for ESP (assumes the proper parameters where used to 
								establish the IKE SA) that selects an encryption algorithm that is not identified in FCS_IPSEC_EXT.1.4.
								Such an attempt should fail.
							</test>
						</testlist>
					</Tests>
				</aactivity>
			</f-element>
			
			<audit-event>
				<audit-event-descr>Decisions to DISCARD or BYPASS network packets processed by the TOE.</audit-event-descr>
				<audit-event-info>Presumed identity of source subject.</audit-event-info>
				<audit-event-info>The entry in the SPD that applied to the decision.</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Failure to establish an IPsec SA.</audit-event-descr>
				<audit-event-info>Identity of destination subject.</audit-event-info>
				<audit-event-info>Reason for failure.</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Establishment/Termination of an IPsec SA.</audit-event-descr>
				<audit-event-info>Identity of destination subject.</audit-event-info>
				<audit-event-info>Transport layer protocol, if applicable.</audit-event-info>
				<audit-event-info>Source subject service identifier, if applicable.</audit-event-info>
				<audit-event-info>Non-TOE endpoint of connection (IP address) for both successes and failures.</audit-event-info>
			</audit-event>
        </f-component>
		
    </sec:cryptsup>  <!-- FCS -->

</sec:Security_Functional_Requirements>
  
<!--                    -->
<!-- Appendix A: Optional Requirements 	-->
<!--                    -->
	
<appendix id="appendix-optional-plus" title="Optional Requirements">  

    <!-- Contents of the appendix are totally generated by "optional-appendix-plus" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="optional">
	  Auditable events for Optional SFRs:<h:br/><h:br/>
	</audit-table>  -->
</appendix> 

<!--                    -->
<!-- Appendix B: Selection-based Requirements 	-->
<!--                    -->

    <appendix id="appendix-sel-based" title="Selection-Based Requirements"> 
       
    <!-- Contents of the appendix are totally generated by "optional-appendix" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="sel-based">
	  Auditable events for Selecton-based Requirements:	
	</audit-table>   -->
    </appendix> 
	
<!--                    -->
<!-- Appendix C: References 	-->
<!--                    -->
	
   <bibliography>	
		<entry id="bibNIST80057">
			<tag>NIST SP 800-57 Part 1 Rev. 5</tag>
			<description>
				<h:a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r5.pdf">
					Recommendation for Key Management: Part 1 - General</h:a>
			</description>
		</entry>   
		<entry id="bibRFC2407">
			<tag>RFC 2407</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc2407">The Internet IP Security Domain of Interpretation for ISAKMP</h:a>
			</description>
		</entry>   
		<entry id="bibRFC2408">
			<tag>RFC 2408</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc2408">Internet Security Association and Key Management Protocol (ISAKMP)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC2409">
			<tag>RFC 2409</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc2409">The Internet Key Exchange (IKE)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC3602">
			<tag>RFC 3602</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc3602">The AES-CBC Cipher Algorithm and Its Use with IPsec</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4106">
			<tag>RFC 4106</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4106">The Use of Galois/Counter Mode (GCM)
					in IPsec Encapsulating Security Payload (ESP)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4109">
			<tag>RFC 4109</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4109">Algorithms for Internet Key Exchange version 1 (IKEv1)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4301">
			<tag>RFC 4301</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4301">Security Architecture for the Internet Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4303">
			<tag>RFC 4303</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4303">IP Encapsulating Security Payload (ESP)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4304">
			<tag>RFC 4304</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4304">Extended Sequence Number (ESN) Addendum to
					IPsec Domain of Interpretation (DOI) for Internet Security Association
					and Key Management Protocol (ISAKMP)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4868">
			<tag>RFC 4868</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4868">Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec</h:a>
			</description>
		</entry>   
		<entry id="bibRFC4945">
			<tag>RFC 4945</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc4945">The Internet IP Security PKI Profile of IKEv1/ISAKMP, IKEv2, and PKIX</h:a>
			</description>
		</entry>   
		<entry id="bibRFC5282">
			<tag>RFC 5282</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc5282">Using Authenticated Encryption Algorithms with the 
					Encrypted Payload of the Internet Key Exchange version 2 (IKEv2) Protocol</h:a>
			</description>
		</entry>   
		<entry id="bibRFC6379">
			<tag>RFC 6379</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc6379">Suite B Cryptographic Suites for IPsec</h:a>
			</description>
		</entry>   
		<entry id="bibRFC7296">
			<tag>RFC 7296</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc7296">Internet Key Exchange Protocol Version 2 (IKEv2)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8247">
			<tag>RFC 8247</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc8247">Algorithm Implementation Requirements and Usage Guidance
					for the Internet Key Exchange Protocol Version 2 (IKEv2)</h:a>
			</description>
		</entry>   
		<entry id="bibRFC8784">
			<tag>RFC 8784</tag>
			<description>
				<h:a href="https://tools.ietf.org/html/rfc8784">Mixing Preshared Keys in the Internet Key Exchange Protocol Version 2
					(IKEv2) for Post-quantum Security</h:a>
			</description>
		</entry>   
    </bibliography>
</Package>
